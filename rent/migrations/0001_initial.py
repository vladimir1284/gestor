# Generated by Django 4.2.2 on 2024-06-12 18:49

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
        ('schedule', '0014_use_autofields_for_pk'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stage', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('signed', 'Signed'), ('ready', 'Ready to sign'), ('missing', 'Missing data'), ('garbage', 'Garbage')], max_length=10)),
                ('trailer_location', models.TextField()),
                ('effective_date', models.DateField()),
                ('ended_date', models.DateField(null=True)),
                ('final_debt', models.FloatField(default=0)),
                ('payment_amount', models.IntegerField()),
                ('service_charge', models.IntegerField(default=100)),
                ('payment_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('biweekly', 'Biweekly'), ('monthly', 'Monthly')], default='weekly', max_length=10)),
                ('security_deposit', models.IntegerField()),
                ('contract_term', models.FloatField(default=3)),
                ('renovation_term', models.IntegerField(default=3)),
                ('delayed_payments', models.IntegerField(default=0)),
                ('contract_type', models.CharField(choices=[('lto', 'Lease to own'), ('rent', 'Rent')], default='rent', max_length=10)),
                ('total_amount', models.IntegerField(default=0)),
                ('template_version', models.IntegerField(blank=True, null=True)),
                ('client_complete', models.BooleanField(blank=True, null=True)),
                ('renovation_15_notify', models.BooleanField(default=False)),
                ('renovation_7_notify', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-effective_date',),
            },
        ),
        migrations.CreateModel(
            name='Guarantor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guarantor_avatar', models.ImageField(blank=True, upload_to='images/avatars/')),
                ('guarantor_name', models.CharField(max_length=120)),
                ('guarantor_license', models.CharField(max_length=50)),
                ('guarantor_license_file', models.FileField(blank=True, upload_to='rental/licenses')),
                ('guarantor_address', models.CharField(max_length=500)),
                ('guarantor_email', models.EmailField(max_length=254)),
                ('guarantor_phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='US')),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_date', models.DateField(default=django.utils.timezone.now)),
                ('number_of_main_tires', models.IntegerField(choices=[(4, '4'), (6, '6'), (8, '8')])),
                ('number_of_spare_tires', models.IntegerField()),
                ('winche', models.BooleanField(default=False)),
                ('megaramp', models.BooleanField(default=False)),
                ('ramp', models.IntegerField(blank=True, choices=[(None, 'None'), (6, "6'"), (8, "8'"), (10, "10'")], null=True)),
                ('ramp_material', models.CharField(choices=[('aluminum', 'Aluminum'), ('steel', 'Steel')], default='steel', max_length=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('ancillary_battery', models.IntegerField(default=0)),
                ('strap_4inch', models.IntegerField(default=0)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.contract')),
            ],
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify', models.BooleanField(default=False)),
                ('payment_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('biweekly', 'Biweekly'), ('monthly', 'Monthly')], default='weekly', max_length=10)),
                ('payment_amount', models.IntegerField()),
                ('num_due_payments', models.IntegerField(default=0)),
                ('last_payment_cover', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('remaining', models.FloatField(default=0)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.contract')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=50)),
                ('url', models.URLField()),
                ('icon', models.ImageField(blank=True, upload_to='images/manufacturers')),
            ],
        ),
        migrations.CreateModel(
            name='RentalCostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('chartColor', models.CharField(choices=[('#696cff', 'violet'), ('#8592a3', 'gray'), ('#71dd37', 'green'), ('#ff3e1d', 'red'), ('#ffab00', 'yellow'), ('#03c3ec', 'blue'), ('#233446', 'black')], default='#8592a3', max_length=7)),
                ('icon', models.ImageField(blank=True, upload_to='images/icons')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('imei', models.BigIntegerField()),
                ('device_password', models.CharField(default='123456', max_length=15)),
                ('device_id', models.IntegerField(blank=True)),
                ('Mode', models.IntegerField(choices=[(0, 'Keepalived'), (1, 'Tracking')], default=0)),
                ('Tint', models.IntegerField(default=60)),
                ('TGPS', models.IntegerField(default=5)),
                ('Tsend', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, '<2010'), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], verbose_name='year')),
                ('vin', models.CharField(max_length=50, unique=True, verbose_name='VIN number')),
                ('note', models.TextField(blank=True)),
                ('plate', models.CharField(blank=True, max_length=50)),
                ('cdl', models.BooleanField()),
                ('type', models.CharField(choices=[('flatbed', 'Flatbed'), ('6_car', '6-Car'), ('3_car_w', '3-Car Wedge'), ('3_car_l', '3-Car Low profile'), ('3_car_f', '3-Car Flatbed'), ('mini5', 'Mini-5'), ('lowboy', 'Lowboy'), ('ez4', 'EZ-4'), ('other', 'Other')], max_length=20)),
                ('axis_number', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], verbose_name='Number of axles')),
                ('load', models.IntegerField(choices=[(7, 7000), (8, 8000), (10, 10000), (12, 12000)], verbose_name='Axle load capacity')),
                ('active', models.BooleanField(default=True)),
                ('lease_to_own', models.BooleanField(default=False)),
                ('position', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(8)])),
                ('position_date', models.DateTimeField(blank=True, null=True)),
                ('position_note', models.TextField(blank=True, null=True)),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rent.manufacturer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrailerDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('days', models.IntegerField(default=7)),
                ('cancelled', models.BooleanField(default=False)),
                ('done', models.BooleanField(default=False)),
                ('amount', models.FloatField()),
                ('note', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('template_version', models.IntegerField(default=1)),
                ('returned_amount', models.FloatField(blank=True, null=True)),
                ('returned_note', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trailer_deposit', to='users.associated')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to='rent.contract')),
                ('trailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trailer_deposit', to='rent.trailer')),
            ],
        ),
        migrations.CreateModel(
            name='TrailerPlates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate', models.CharField(blank=True, max_length=50)),
                ('assign_date', models.DateField(auto_now_add=True)),
                ('active_plate', models.BooleanField(default=False)),
                ('trailer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rent.trailer')),
            ],
        ),
        migrations.CreateModel(
            name='TrailerPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/equipment')),
                ('pinned', models.BooleanField(default=False)),
                ('trailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trailer_picture', to='rent.trailer')),
            ],
        ),
        migrations.CreateModel(
            name='TrailerDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/trailer')),
                ('name', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True)),
                ('document_type', models.CharField(choices=[('PDF', 'PDF'), ('DOC', 'DOC'), ('XLS', 'XLS'), ('IMG', 'IMG'), ('BIN', 'BIN')], max_length=3)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('remainder_days', models.IntegerField(blank=True, choices=[(1, '1 day'), (7, '1 week'), (30, '1 month')], null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('remainder_date', models.DateField(blank=True, null=True)),
                ('trailer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='rent.trailer')),
            ],
        ),
        migrations.CreateModel(
            name='TrailerDepositTrace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.FloatField()),
                ('days', models.IntegerField(default=7)),
                ('note', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trailer_deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traces', to='rent.trailerdeposit')),
            ],
        ),
        migrations.CreateModel(
            name='TrackerUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('charging', models.BooleanField(blank=True, null=True)),
                ('battery', models.FloatField(blank=True, null=True)),
                ('wur', models.IntegerField(blank=True, null=True)),
                ('wdgc', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(choices=[('LTE', 'Radio base'), ('GPS', 'GPS data')], default='LTE', max_length=3)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('mcc', models.IntegerField(blank=True, null=True)),
                ('mnc', models.IntegerField(blank=True, null=True)),
                ('lac', models.IntegerField(blank=True, null=True)),
                ('cellid', models.IntegerField(blank=True, null=True)),
                ('tracker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_upload', to='rent.tracker')),
            ],
        ),
        migrations.AddField(
            model_name='tracker',
            name='trailer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rent.trailer'),
        ),
        migrations.CreateModel(
            name='Tire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('type', models.CharField(choices=[('spare', 'Spare'), ('main', 'Main')], max_length=10)),
                ('remaining_life', models.IntegerField(choices=[(50, '50%'), (60, '60%'), (70, '70%'), (80, '80%'), (90, '90%'), (100, '100%')], default=100)),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.inspection')),
            ],
        ),
        migrations.CreateModel(
            name='SecurityDepositDevolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0)),
                ('total_deposited_amount', models.FloatField(default=0)),
                ('returned', models.BooleanField(default=False)),
                ('returned_date', models.DateField(null=True)),
                ('immediate_refund', models.BooleanField(default=False)),
                ('reason', models.CharField(blank=True, max_length=300, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('refund_date', models.DateField(null=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.contract')),
            ],
        ),
        migrations.CreateModel(
            name='RentalCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept', models.CharField(max_length=120)),
                ('image', models.ImageField(blank=True, upload_to='images/costs')),
                ('note', models.TextField(blank=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('date', models.DateField()),
                ('amount', models.FloatField()),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rent.rentalcostcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rental_created_by', to=settings.AUTH_USER_MODEL)),
                ('related_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rental_related_to', to=settings.AUTH_USER_MODEL, verbose_name='Associated')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_payment', models.DateField()),
                ('sender_name', models.CharField(blank=True, max_length=150)),
                ('amount', models.FloatField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.associated')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.lease')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_reminder', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reminder_date', models.DateTimeField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/notes')),
                ('text', models.TextField(blank=True)),
                ('document_type', models.CharField(choices=[('PDF', 'PDF'), ('DOC', 'DOC'), ('XLS', 'XLS'), ('IMG', 'IMG'), ('BIN', 'BIN')], default='BIN', max_length=3)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.contract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LesseeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_number', models.CharField(blank=True, max_length=150)),
                ('insurance_file', models.FileField(blank=True, upload_to='rental/insurances')),
                ('license_number', models.CharField(max_length=150)),
                ('license_file', models.FileField(blank=True, upload_to='rental/licenses')),
                ('client_address', models.TextField()),
                ('contact_name', models.CharField(max_length=100)),
                ('contact_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='US')),
                ('contact_file', models.FileField(blank=True, null=True, upload_to='documents/contact')),
                ('contact2_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact2_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='US')),
                ('contact2_file', models.FileField(blank=True, null=True, upload_to='documents/contact')),
                ('contact3_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact3_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='US')),
                ('contact3_file', models.FileField(blank=True, null=True, upload_to='documents/contact')),
                ('associated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.associated')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/leases')),
                ('name', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True)),
                ('document_type', models.CharField(choices=[('PDF', 'PDF'), ('DOC', 'DOC'), ('XLS', 'XLS'), ('IMG', 'IMG'), ('BIN', 'BIN')], max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.contract')),
                ('lease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lease_document', to='rent.lease')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseDeposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.FloatField()),
                ('note', models.TextField(blank=True)),
                ('on_hold', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lease_deposit', to='rent.lease')),
            ],
        ),
        migrations.CreateModel(
            name='HandWriting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=50)),
                ('img', models.ImageField(upload_to='rental/signatures')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hand_writing', to='rent.contract')),
            ],
        ),
        migrations.CreateModel(
            name='Due',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.TextField(blank=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.associated')),
                ('lease', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rent.lease')),
            ],
        ),
        migrations.CreateModel(
            name='DepositDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.BooleanField(default=False)),
                ('saved_duration_in_days', models.IntegerField(null=True)),
                ('location_towit', models.BooleanField(blank=True, null=True)),
                ('location_note', models.TextField(blank=True, null=True)),
                ('trailer_condition_discount', models.FloatField(default=0)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.contract')),
            ],
        ),
        migrations.CreateModel(
            name='ContractRenovation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('effective_date', models.DateField()),
                ('renovation_term', models.IntegerField(default=3)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_renovations', to='rent.contract')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='guarantor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rent.guarantor'),
        ),
        migrations.AddField(
            model_name='contract',
            name='lessee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.associated'),
        ),
        migrations.AddField(
            model_name='contract',
            name='trailer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rent.trailer'),
        ),
        migrations.AddField(
            model_name='contract',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
